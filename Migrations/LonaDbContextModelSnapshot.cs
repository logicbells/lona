// <auto-generated />
using System;
using Lona.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lona.Migrations
{
    [DbContext(typeof(LonaDbContext))]
    partial class LonaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Lona.Data.Entities.Applicant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("HomeOwner")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Applicants");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "Citec Estate, Abuja",
                            DateOfBirth = new DateTime(1980, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "baba@yahoo.com",
                            HomeOwner = true,
                            Name = "Baba Usman"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "Suncity Estate, Abuja",
                            DateOfBirth = new DateTime(1983, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dele@gmail.com",
                            HomeOwner = false,
                            Name = "Dele Adeyemi"
                        });
                });

            modelBuilder.Entity("Lona.Data.Entities.Loan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ApplicantId")
                        .HasColumnType("bigint");

                    b.Property<string>("ApprovalStatus")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("ApprovalStatusActionByStaffId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovalStatusDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InterestRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentPlan")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.Property<decimal>("TermlyAmountPayable")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmountPayable")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("ApprovalStatusActionByStaffId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Amount = 100000m,
                            ApplicantId = 1L,
                            ApprovalStatus = "Approved",
                            ApprovalStatusActionByStaffId = 1,
                            ApprovalStatusDate = new DateTime(2022, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2022, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InterestRate = 15m,
                            PaymentPlan = "Monthly",
                            Term = 18,
                            TermlyAmountPayable = 6388.89m,
                            TotalAmountPayable = 115000m
                        },
                        new
                        {
                            Id = 2L,
                            Amount = 100000m,
                            ApplicantId = 2L,
                            ApprovalStatus = "Declined",
                            ApprovalStatusActionByStaffId = 1,
                            ApprovalStatusDate = new DateTime(2022, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2022, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InterestRate = 15m,
                            PaymentPlan = "Monthly",
                            Term = 18,
                            TermlyAmountPayable = 6388.89m,
                            TotalAmountPayable = 115000m
                        });
                });

            modelBuilder.Entity("Lona.Data.Entities.LoanPaymentList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ApplicantId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<long>("LoanId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PaymentDueDate")
                        .HasColumnType("date");

                    b.Property<decimal>("TermlyAmountPayable")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("LoanId");

                    b.ToTable("LoanPaymentList");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApplicantId = 1L,
                            IsPaid = false,
                            LoanId = 1L,
                            PaymentDueDate = new DateTime(2022, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TermlyAmountPayable = 6388.89m
                        },
                        new
                        {
                            Id = 2L,
                            ApplicantId = 2L,
                            IsPaid = false,
                            LoanId = 2L,
                            PaymentDueDate = new DateTime(2022, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TermlyAmountPayable = 6388.89m
                        });
                });

            modelBuilder.Entity("Lona.Data.Entities.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Staffers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "James Godbold"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chinemere"
                        });
                });

            modelBuilder.Entity("Lona.Data.Entities.Loan", b =>
                {
                    b.HasOne("Lona.Data.Entities.Applicant", "ApplicantNavigation")
                        .WithMany()
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Lona.Data.Entities.Staff", "StaffNavigation")
                        .WithMany()
                        .HasForeignKey("ApprovalStatusActionByStaffId");

                    b.Navigation("ApplicantNavigation");

                    b.Navigation("StaffNavigation");
                });

            modelBuilder.Entity("Lona.Data.Entities.LoanPaymentList", b =>
                {
                    b.HasOne("Lona.Data.Entities.Applicant", "ApplicantNavigation")
                        .WithMany()
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Lona.Data.Entities.Loan", "Loan")
                        .WithMany("Items")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicantNavigation");

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("Lona.Data.Entities.Loan", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
